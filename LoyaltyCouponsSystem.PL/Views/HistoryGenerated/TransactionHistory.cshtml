@using LoyaltyCouponsSystem.BLL.ViewModel.QRCode
@model IEnumerable<HistoryTransactionGeneratedQRVM>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutCoupon.cshtml";
}

<!-- Include Burger Menu for Mobile -->
@await Html.PartialAsync("_BurgerMenu")

<br>
<br>
<br>
<br>

<div class="col-md-12">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title"> @SharedLocalizer["TransactionGeneratedQRs"]  </h4>
            <form method="get" class="form-inline">
                <div class="row">
                    <div class="col">
                        <input type="text" name="serialNumber" class="form-control" placeholder=@SharedLocalizer["SerialNumber"] value="@ViewContext.HttpContext.Request.Query["serialNumber"]" />
                    </div>
                    <div class="col">
                        <input type="text" name="fromSequence" class="form-control" placeholder=@SharedLocalizer["StartSequence"] value="@ViewContext.HttpContext.Request.Query["fromSequence"]" />
                    </div>
                    <div class="col">
                        <input type="text" name="toSequence" class="form-control" placeholder=@SharedLocalizer["EndSequence"] value="@ViewContext.HttpContext.Request.Query["toSequence"]" />
                    </div>
                    <div class="col">
                        <select name="typeOfCoupon" class="form-select" @* class="form-control" *@>
                            <option disabled selected>@SharedLocalizer["SeclectTypeOfCoupon"]</option>
                            <option value="راك ثيرم">راك ثيرم</option>
                            <option value="صرف جي تكس">صرف جي تكس</option>
                            <option value="اقطار كبيرة وهودذا">اقطار كبيرة وهودذا</option>
                            <option value="كعب راك ثيرم">كعب راك ثيرم</option>
                            <option value="كعب صرف جي تكس">كعب صرف جي تكس</option>
                            <option value="كعب اقطار كبيرة وهودذا">كعب اقطار كبيرة وهودذا</option>
                        </select>
                    </div>
                    <div class="col">
                        <select id="governorate" name="governorate" class="form-select">
                            <option disabled selected>@SharedLocalizer["SelectGovernate"]</option>
                            @foreach (var governorate in ViewBag.Governorates as IEnumerable<string>)
                            {
                                <option value="@governorate">@governorate</option>
                            }
                        </select>
                    </div>
                    <div class="col">
                        <select id="area" name="area" class="form-select" disabled>
                            <option disabled selected>@SharedLocalizer["SelectArea"]</option>
                        </select>
                    </div>
                    
                    <div class="col">
                        <button type="submit" class="btn btn-primary">@SharedLocalizer["Filter"] </button>
                    </div>
                </div>
            </form>
        </div>

        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>
                                @SharedLocalizer["StartSequence"]
                            </th>
                            <th>
                                @SharedLocalizer["EndSequence"]
                            </th>
                            <th>
                                @SharedLocalizer["TypeOfCoupone"]
                            </th>

                            <th>
                                @SharedLocalizer["CreationDateTime"]
                            </th>

                            <th>
                                @SharedLocalizer["NumberOfCoupones"]
                            </th>


                            <th>
                                @SharedLocalizer["GeneratedBy"]
                            </th>
                            <th>
                                @SharedLocalizer["Value"]
                            </th>
                            <th>
                                @SharedLocalizer["Governorate"]
                            </th>
                            <th>
                                @SharedLocalizer["Area"]
                            </th>
                            <th>
                                @SharedLocalizer["Details"]
                                
                            </th>
                            <th>
                                @SharedLocalizer["Print"]
                                
                            </th>

                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FromSerialNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ToSerialNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TypeOfCoupone)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.CreationDateTime)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.NumberOfCoupones)
                                </td>



                                <td>
                                    @Html.DisplayFor(modelItem => item.GeneratedBy)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Value)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Governorate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Area)
                                </td>
                                <td>
                                    <form asp-action="GetAllCoupons" method="get" style="display:inline;">
                                        <input type="hidden" name="fromSequence" value="@item.FromSerialNumber" />
                                        <input type="hidden" name="toSequence" value="@item.ToSerialNumber" />
                                        <input type="hidden" name="typeOfCoupon" value="@item.TypeOfCoupone" />

                                        <button type="submit" class="btn btn-primary">Details</button>
                                    </form>
                                </td>
                                <td>
                                    @if (item.FlagToPrint)
                                    {
                                        <form asp-controller="GenerateQRCode" asp-action="PrintingExistingCoupones" method="get" style="display:inline;">
                                            <input type="hidden" name="FromSerialNum" value="@item.FromSerialNumber" />
                                            <input type="hidden" name="ToSerialNum" value="@item.ToSerialNumber" />
                                            <button type="submit" class="btn btn-primary">Printing</button>
                                        </form>
                                    }
                                    else
                                    {
                                        <span style="color: red;">Printing Not Allowed</span>
                                    }
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div>
                <nav>
                    <ul class="pagination">
                        @if (ViewBag.CurrentPage > 1?? false)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?serialNumber=@ViewContext.HttpContext.Request.Query["serialNumber"]&fromSequence=@ViewContext.HttpContext.Request.Query["fromSequence"]&toSequence=@ViewContext.HttpContext.Request.Query["toSequence"]&typeOfCoupon=@ViewContext.HttpContext.Request.Query["typeOfCoupon"]&governorate=@ViewContext.HttpContext.Request.Query["governorate"]&area=@ViewContext.HttpContext.Request.Query["area"]&status=@ViewContext.HttpContext.Request.Query["status"]&page=@(ViewBag.CurrentPage - 1)">Previous</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage > 3 ?? false)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?serialNumber=@ViewContext.HttpContext.Request.Query["serialNumber"]&fromSequence=@ViewContext.HttpContext.Request.Query["fromSequence"]&toSequence=@ViewContext.HttpContext.Request.Query["toSequence"]&typeOfCoupon=@ViewContext.HttpContext.Request.Query["typeOfCoupon"]&governorate=@ViewContext.HttpContext.Request.Query["governorate"]&area=@ViewContext.HttpContext.Request.Query["area"]&status=@ViewContext.HttpContext.Request.Query["status"]&page=1">1</a>
                            </li>
                            <li class="page-item disabled">
                                <a class="page-link">...</a>
                            </li>
                        }

                        @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                                <a class="page-link" href="?serialNumber=@ViewContext.HttpContext.Request.Query["serialNumber"]&fromSequence=@ViewContext.HttpContext.Request.Query["fromSequence"]&toSequence=@ViewContext.HttpContext.Request.Query["toSequence"]&typeOfCoupon=@ViewContext.HttpContext.Request.Query["typeOfCoupon"]&governorate=@ViewContext.HttpContext.Request.Query["governorate"]&area=@ViewContext.HttpContext.Request.Query["area"]&status=@ViewContext.HttpContext.Request.Query["status"]&page=@i">@i</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages - 2)
                        {
                            <li class="page-item disabled">
                                <a class="page-link">...</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="?serialNumber=@ViewContext.HttpContext.Request.Query["serialNumber"]&fromSequence=@ViewContext.HttpContext.Request.Query["fromSequence"]&toSequence=@ViewContext.HttpContext.Request.Query["toSequence"]&typeOfCoupon=@ViewContext.HttpContext.Request.Query["typeOfCoupon"]&governorate=@ViewContext.HttpContext.Request.Query["governorate"]&area=@ViewContext.HttpContext.Request.Query["area"]&status=@ViewContext.HttpContext.Request.Query["status"]&page=@ViewBag.TotalPages">@ViewBag.TotalPages</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?serialNumber=@ViewContext.HttpContext.Request.Query["serialNumber"]&fromSequence=@ViewContext.HttpContext.Request.Query["fromSequence"]&toSequence=@ViewContext.HttpContext.Request.Query["toSequence"]&typeOfCoupon=@ViewContext.HttpContext.Request.Query["typeOfCoupon"]&governorate=@ViewContext.HttpContext.Request.Query["governorate"]&area=@ViewContext.HttpContext.Request.Query["area"]&status=@ViewContext.HttpContext.Request.Query["status"]&page=@(ViewBag.CurrentPage + 1)">Next</a>
                            </li>
                        }
                    </ul>
                </nav>

            </div>
        </div>
    </div>
</div>

<style>

    .pagination {
        display: flex;
        list-style: none;
        padding: 0;
        justify-content: center;
        gap: 5px;
    }

    .page-item {
        transition: all 0.3s ease;
    }

    .page-link {
        display: block;
        padding: 8px 16px;
        border: 1px solid #007bff;
        border-radius: 5px;
        color: #007bff;
        text-decoration: none;
        background-color: #fff;
        transition: background-color 0.3s, color 0.3s;
        font-weight: bold;
    }

        .page-link:hover {
            background-color: #007bff;
            color: #fff;
        }

    .page-item.active .page-link {
        background-color: #007bff;
        color: #fff;
        border-color: #0056b3;
        pointer-events: none; /* لمنع الضغط على الصفحة الحالية */
    }

    .page-item.disabled .page-link {
        color: #ccc;
        border-color: #ccc;
        pointer-events: none;
        background-color: #f8f9fa;
    }

    /* Responsive Styling for Mobile Devices */
    @@media (max-width: 768px) {
        /* Adjust container padding and form width */
        .container

    {
        padding: 10px;
        width: 100%;
    }

    form {
        padding: 15px;
        max-width: 100%;
    }

    /* Ensure form fields take full width */
    .form-control, .form-select {
        font-size: 14px;
        padding: 10px;
        width: 100%;
    }

    /* Stack form elements vertically */
    .row {
        flex-direction: column;
        gap: 10px;
    }

        .row .col {
            flex: 0 0 100%;
            max-width: 100%;
        }

    /* Table adjustments */
    .table-responsive {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    .table {
        font-size: 14px;
        white-space: nowrap; /* Prevent text wrapping */
    }

    /* Hide extra columns on small screens */
    th:nth-child(5),
    th:nth-child(6),
    th:nth-child(7),
    td:nth-child(5),
    td:nth-child(6),
    td:nth-child(7) {
        display: none;
    }

    /* Center filter button */
    .btn-primary {
        width: 100%;
    }

    /* Pagination Centering */
    .pagination {
        flex-wrap: wrap;
        justify-content: center;
    }

    .page-link {
        font-size: 12px;
        padding: 6px 12px;
    }

    /* Fix table cell overflow */
    .table td, .table th {
        padding: 8px;
        word-break: break-word;
    }

    }
</style>


    <script>
        document.getElementById('governorate').addEventListener('change', function () {
            const governorate = this.value;
            const areaDropdown = document.getElementById('area');

            if (governorate) {
                 areaDropdown.disabled = false;
                fetch(`/HistoryGenerated/GetAreas?governorate=${governorate}`)

                    .then(response => response.json())
                    .then(data => {
                        areaDropdown.innerHTML = '<option disabled selected>Select Area</option>';
                        data.forEach(area => {
                            const option = document.createElement('option');
                            option.value = area;
                            option.textContent = area;
                            areaDropdown.appendChild(option);
                        });
                        areaDropdown.disabled = false;
                    });
            } else {
                areaDropdown.innerHTML = '<option value="">Select Area</option>';
                areaDropdown.disabled = true;
            }
        });
    </script>



    